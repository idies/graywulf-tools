//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jhu.Graywulf.DBSubset.Lib {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ScriptTemplates {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ScriptTemplates() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Jhu.Graywulf.DBSubset.Lib.ScriptTemplates", typeof(ScriptTemplates).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  -- Insert subset into destination table
        /// INSERT [$DestinationTable] WITH (TABLOCKX)
        ///    ([$InsertColumnList])
        /// SELECT [$SelectColumnList]
        /// FROM   [$SourceTable] sourcetablealias WITH (NOLOCK)
        ///	[$SourceTableJoins];
        /// .
        /// </summary>
        internal static string FullTableQuery {
            get {
                return ResourceManager.GetString("FullTableQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  -- Create temporary table for the random ID list
        /// IF EXISTS( SELECT * FROM tempdb.dbo.sysobjects WHERE ID = OBJECT_ID(N&apos;tempdb..##temporaryidlist&apos;))
        /// DROP TABLE ##temporaryidlist;
        /// GO
        ///
        /// CREATE TABLE ##temporaryidlist
        /// (
        ///	[$TempTableColumns]
        /// );
        /// 
        /// -- Collect IDs
        /// WITH temporaryidlistquery AS
        /// (
        ///	SELECT [$PrimaryKeyColumnsAlias], master.dbo.RandomDouble() AS randomnumber
        ///	FROM [$SourceTable] sourcetablealias
        ///	[$SourceTableJoins]
        /// )
        /// INSERT ##temporaryidlist WITH (TABLOCKX)
        /// SELECT [$Primar [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RandomSubsetQuery {
            get {
                return ResourceManager.GetString("RandomSubsetQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  --Setting Identity Column
        /// SET IDENTITY_INSERT [$DestinationTable] [$IdentityInsertState];
        /// .
        /// </summary>
        internal static string SetIdentityInsertQuery {
            get {
                return ResourceManager.GetString("SetIdentityInsertQuery", resourceCulture);
            }
        }
    }
}
